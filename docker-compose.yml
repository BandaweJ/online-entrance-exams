version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: entrance_exam_db
    environment:
      POSTGRES_DB: ${DB_NAME:-entrance_exam_db}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docs/sql-schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - exam_network
    restart: unless-stopped

  # Backend API
  backend:
    build: ./backend
    container_name: entrance_exam_backend
    env_file:
      - .env
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-password}
      DB_NAME: ${DB_NAME:-entrance_exam_db}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-here}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      PORT: ${PORT:-3000}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:4200}
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      - postgres
    networks:
      - exam_network
    restart: unless-stopped
    volumes:
      - ./backend/uploads:/app/uploads

  # Frontend
  frontend:
    build: ./frontend
    container_name: entrance_exam_frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - exam_network
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: entrance_exam_redis
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - exam_network
    restart: unless-stopped
    command: redis-server --appendonly yes ${REDIS_PASSWORD:+--requirepass $REDIS_PASSWORD}
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  exam_network:
    driver: bridge
